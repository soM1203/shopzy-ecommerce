{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sayali\\\\Desktop\\\\submission\\\\frontend\\\\src\\\\components\\\\ProductGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from './ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductGrid = ({\n  cart,\n  setCart\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchProducts();\n    fetchCartFromBackend(); // Sync with backend cart on page load\n  }, []);\n\n  // Fetch products from backend\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('http://localhost:5000/api/products');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      setError('Failed to load products. Please try again later.');\n\n      // Fallback to mock data if API is not available\n      const mockProducts = [{\n        id: 1,\n        name: \"Wireless Headphones\",\n        price: 99.99,\n        description: \"High-quality wireless headphones with noise cancellation\",\n        image: \"ðŸŽ§\"\n      }, {\n        id: 2,\n        name: \"Smart Watch\",\n        price: 199.99,\n        description: \"Feature-rich smartwatch with health monitoring\",\n        image: \"âŒš\"\n      }, {\n        id: 3,\n        name: \"Laptop Backpack\",\n        price: 49.99,\n        description: \"Durable laptop backpack with USB charging port\",\n        image: \"ðŸŽ’\"\n      }, {\n        id: 4,\n        name: \"Bluetooth Speaker\",\n        price: 79.99,\n        description: \"Portable Bluetooth speaker with 360Â° sound\",\n        image: \"ðŸ”Š\"\n      }, {\n        id: 5,\n        name: \"Phone Case\",\n        price: 24.99,\n        description: \"Protective phone case with sleek design\",\n        image: \"ðŸ“±\"\n      }];\n      setProducts(mockProducts);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch cart from backend on page load\n  const fetchCartFromBackend = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/cart');\n      if (response.ok) {\n        const data = await response.json();\n        setCart(data.items); // Sync frontend with backend cart\n        console.log('ðŸ”„ Cart synced with backend:', data.items);\n      }\n    } catch (error) {\n      console.error('Error fetching cart from backend:', error);\n      // If backend fails, localStorage will handle it\n    }\n  };\n  const addToCart = async product => {\n    try {\n      const response = await fetch('http://localhost:5000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          productId: product.id,\n          quantity: 1\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add item to cart');\n      }\n      const result = await response.json();\n\n      // Update local cart state based on backend response\n      const existingItem = cart.find(item => item.productId === product.id);\n      if (existingItem) {\n        setCart(cart.map(item => item.productId === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item));\n      } else {\n        setCart([...cart, {\n          id: product.id,\n          productId: product.id,\n          name: product.name,\n          price: product.price,\n          quantity: 1\n        }]);\n      }\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      // Fallback to local state if API fails\n      const existingItem = cart.find(item => item.id === product.id);\n      if (existingItem) {\n        setCart(cart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item));\n      } else {\n        setCart([...cart, {\n          ...product,\n          quantity: 1\n        }]);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading products...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchProducts,\n          className: \"retry-btn\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product,\n        onAddToCart: addToCart\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductGrid, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = ProductGrid;\nexport default ProductGrid;\nvar _c;\n$RefreshReg$(_c, \"ProductGrid\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","ProductGrid","cart","setCart","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","fetchCartFromBackend","response","fetch","ok","Error","status","data","json","console","mockProducts","id","name","price","description","image","items","log","addToCart","product","method","headers","body","JSON","stringify","productId","quantity","result","existingItem","find","item","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddToCart","_c","$RefreshReg$"],"sources":["C:/Users/Sayali/Desktop/submission/frontend/src/components/ProductGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductCard from './ProductCard';\n\nconst ProductGrid = ({ cart, setCart }) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCartFromBackend(); // Sync with backend cart on page load\n  }, []);\n\n  // Fetch products from backend\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('http://localhost:5000/api/products');\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      setError('Failed to load products. Please try again later.');\n      \n      // Fallback to mock data if API is not available\n      const mockProducts = [\n        { \n          id: 1, \n          name: \"Wireless Headphones\", \n          price: 99.99, \n          description: \"High-quality wireless headphones with noise cancellation\",\n          image: \"ðŸŽ§\"\n        },\n        { \n          id: 2, \n          name: \"Smart Watch\", \n          price: 199.99, \n          description: \"Feature-rich smartwatch with health monitoring\",\n          image: \"âŒš\"\n        },\n        { \n          id: 3, \n          name: \"Laptop Backpack\", \n          price: 49.99, \n          description: \"Durable laptop backpack with USB charging port\",\n          image: \"ðŸŽ’\"\n        },\n        { \n          id: 4, \n          name: \"Bluetooth Speaker\", \n          price: 79.99, \n          description: \"Portable Bluetooth speaker with 360Â° sound\",\n          image: \"ðŸ”Š\"\n        },\n        { \n          id: 5, \n          name: \"Phone Case\", \n          price: 24.99, \n          description: \"Protective phone case with sleek design\",\n          image: \"ðŸ“±\"\n        }\n      ];\n      setProducts(mockProducts);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch cart from backend on page load\n  const fetchCartFromBackend = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/cart');\n      if (response.ok) {\n        const data = await response.json();\n        setCart(data.items); // Sync frontend with backend cart\n        console.log('ðŸ”„ Cart synced with backend:', data.items);\n      }\n    } catch (error) {\n      console.error('Error fetching cart from backend:', error);\n      // If backend fails, localStorage will handle it\n    }\n  };\n\n  const addToCart = async (product) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          productId: product.id,\n          quantity: 1\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add item to cart');\n      }\n\n      const result = await response.json();\n      \n      // Update local cart state based on backend response\n      const existingItem = cart.find(item => item.productId === product.id);\n      if (existingItem) {\n        setCart(cart.map(item =>\n          item.productId === product.id \n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        ));\n      } else {\n        setCart([...cart, { \n          id: product.id,\n          productId: product.id,\n          name: product.name, \n          price: product.price, \n          quantity: 1 \n        }]);\n      }\n\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      // Fallback to local state if API fails\n      const existingItem = cart.find(item => item.id === product.id);\n      if (existingItem) {\n        setCart(cart.map(item =>\n          item.id === product.id \n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        ));\n      } else {\n        setCart([...cart, { ...product, quantity: 1 }]);\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"products-section\">\n        <h2>Products</h2>\n        <div className=\"loading\">Loading products...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"products-section\">\n        <h2>Products</h2>\n        <div className=\"error-message\">\n          <p>{error}</p>\n          <button onClick={fetchProducts} className=\"retry-btn\">\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"products-section\">\n      <h2>Products</h2>\n      <div className=\"product-grid\">\n        {products.map(product => (\n          <ProductCard \n            key={product.id} \n            product={product} \n            onAddToCart={addToCart}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}