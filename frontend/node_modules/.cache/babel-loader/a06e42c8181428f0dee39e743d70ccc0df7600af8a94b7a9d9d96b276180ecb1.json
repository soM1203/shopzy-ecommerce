{"ast":null,"code":"var _s = $RefreshSig$();\n// Checkout.js\nimport React, { useState } from 'react';\nconst Checkout = ({\n  cart,\n  onCheckoutSuccess,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    address: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('üõí Submitting checkout with cart:', cart);\n    try {\n      const response = await fetch('http://localhost:4000/api/cart/checkout', {\n        // Changed to 4000\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cartItems: cart,\n          customerInfo: formData\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Checkout failed');\n      }\n      const receipt = await response.json();\n      console.log('‚úÖ Checkout response:', receipt);\n      onCheckoutSuccess(receipt);\n    } catch (error) {\n      console.error('‚ùå Checkout error:', error);\n      alert('Checkout failed. Please try again.');\n    }\n  };\n\n  // ... rest of your component\n};\n_s(Checkout, \"1/kOduIusqZmmFdA5m+jDBrQU/A=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useState","Checkout","cart","onCheckoutSuccess","onClose","_s","formData","setFormData","name","email","address","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","cartItems","customerInfo","ok","Error","receipt","json","error","alert","_c","$RefreshReg$"],"sources":["C:/Users/Sayali/Desktop/submission/frontend/src/components/Checkout.js"],"sourcesContent":["// Checkout.js\r\nimport React, { useState } from 'react';\r\n\r\nconst Checkout = ({ cart, onCheckoutSuccess, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    address: ''\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('üõí Submitting checkout with cart:', cart);\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/cart/checkout', { // Changed to 4000\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          cartItems: cart,\r\n          customerInfo: formData\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Checkout failed');\r\n      }\r\n\r\n      const receipt = await response.json();\r\n      console.log('‚úÖ Checkout response:', receipt);\r\n      \r\n      onCheckoutSuccess(receipt);\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Checkout error:', error);\r\n      alert('Checkout failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  // ... rest of your component\r\n};\r\n\r\nexport default Checkout;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,iBAAiB;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEb,IAAI,CAAC;IAEtD,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAErB,IAAI;UACfsB,YAAY,EAAElB;QAChB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACU,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MACrCd,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEY,OAAO,CAAC;MAE5CxB,iBAAiB,CAACwB,OAAO,CAAC;IAE5B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCC,KAAK,CAAC,oCAAoC,CAAC;IAC7C;EACF,CAAC;;EAED;AACF,CAAC;AAACzB,EAAA,CAvCIJ,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}